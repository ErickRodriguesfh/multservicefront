/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ContractorsIndexImport } from './routes/contractors/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as ContractorsCreateIndexImport } from './routes/contractors/create/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContractorsIndexRoute = ContractorsIndexImport.update({
  id: '/contractors/',
  path: '/contractors/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const ContractorsCreateIndexRoute = ContractorsCreateIndexImport.update({
  id: '/contractors/create/',
  path: '/contractors/create/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/contractors/': {
      id: '/contractors/'
      path: '/contractors'
      fullPath: '/contractors'
      preLoaderRoute: typeof ContractorsIndexImport
      parentRoute: typeof rootRoute
    }
    '/contractors/create/': {
      id: '/contractors/create/'
      path: '/contractors/create'
      fullPath: '/contractors/create'
      preLoaderRoute: typeof ContractorsCreateIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth': typeof AuthIndexRoute
  '/contractors': typeof ContractorsIndexRoute
  '/contractors/create': typeof ContractorsCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth': typeof AuthIndexRoute
  '/contractors': typeof ContractorsIndexRoute
  '/contractors/create': typeof ContractorsCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth/': typeof AuthIndexRoute
  '/contractors/': typeof ContractorsIndexRoute
  '/contractors/create/': typeof ContractorsCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/auth' | '/contractors' | '/contractors/create'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/auth' | '/contractors' | '/contractors/create'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/'
    | '/contractors/'
    | '/contractors/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthIndexRoute: typeof AuthIndexRoute
  ContractorsIndexRoute: typeof ContractorsIndexRoute
  ContractorsCreateIndexRoute: typeof ContractorsCreateIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthIndexRoute: AuthIndexRoute,
  ContractorsIndexRoute: ContractorsIndexRoute,
  ContractorsCreateIndexRoute: ContractorsCreateIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/",
        "/contractors/",
        "/contractors/create/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/contractors/": {
      "filePath": "contractors/index.tsx"
    },
    "/contractors/create/": {
      "filePath": "contractors/create/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
