/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ServicesOfferServiceIndexImport } from './routes/services/offer-service/index'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/auth/sign-in/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesOfferServiceIndexRoute = ServicesOfferServiceIndexImport.update({
  id: '/services/offer-service/',
  path: '/services/offer-service/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/auth/sign-in/',
  path: '/auth/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/services/offer-service/': {
      id: '/services/offer-service/'
      path: '/services/offer-service'
      fullPath: '/services/offer-service'
      preLoaderRoute: typeof ServicesOfferServiceIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/services/offer-service': typeof ServicesOfferServiceIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/services/offer-service': typeof ServicesOfferServiceIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/services/offer-service/': typeof ServicesOfferServiceIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/services/offer-service'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/services/offer-service'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/services/offer-service/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
  ServicesOfferServiceIndexRoute: typeof ServicesOfferServiceIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
  ServicesOfferServiceIndexRoute: ServicesOfferServiceIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/sign-in/",
        "/auth/sign-up/",
        "/services/offer-service/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx"
    },
    "/services/offer-service/": {
      "filePath": "services/offer-service/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
